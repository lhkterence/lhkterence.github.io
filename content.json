{"meta":{"title":"罗宏昆","subtitle":"Ternenceの博客","description":"本科 | 测绘工程 ","author":"罗宏昆","url":"https://lhkterence.github.io","root":"/"},"pages":[{"title":"","date":"2023-03-04T09:20:53.373Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"https://lhkterence.github.io/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"放松一下","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/index.html","permalink":"https://lhkterence.github.io/List/index.html","excerpt":"","text":"影音资源共享"},{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"404.html","permalink":"https://lhkterence.github.io/404.html","excerpt":"","text":""},{"title":"about","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"about/index.html","permalink":"https://lhkterence.github.io/about/index.html","excerpt":"","text":""},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"archives/index.html","permalink":"https://lhkterence.github.io/archives/index.html","excerpt":"","text":""},{"title":"友链","date":"2019-07-19T08:42:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"friends/index.html","permalink":"https://lhkterence.github.io/friends/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"categories/index.html","permalink":"https://lhkterence.github.io/categories/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"resource/index.html","permalink":"https://lhkterence.github.io/resource/index.html","excerpt":"","text":""},{"title":"留言板","date":"2022-04-29T16:00:00.000Z","updated":"2022-04-30T04:14:57.684Z","comments":true,"path":"contact/index.html","permalink":"https://lhkterence.github.io/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 Terenceの友链信息 博客名称: Terenceの博客 博客网址: https://lhkterence.github.io/ 博客头像: https://s3.bmp.ovh/imgs/2022/04/30/a5e6ec1fd94e0dbd.jpg 博客介绍: The harder you work, the luckier you will be"},{"title":"","date":"2023-03-04T09:20:53.371Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"https://lhkterence.github.io/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"census/index.html","permalink":"https://lhkterence.github.io/census/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"tags/index.html","permalink":"https://lhkterence.github.io/tags/index.html","excerpt":"","text":""},{"title":"相册","date":"2023-03-04T09:20:53.376Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/index.html","permalink":"https://lhkterence.github.io/List/galleries/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/tools/index.html","permalink":"https://lhkterence.github.io/List/tools/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/movies/index.html","permalink":"https://lhkterence.github.io/List/movies/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/music/index.html","permalink":"https://lhkterence.github.io/List/music/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2023-03-04T09:20:53.378Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2023-03-04T09:20:53.378Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2023-03-04T09:20:53.377Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2023-03-04T09:20:53.377Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2023-03-04T09:20:53.379Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2023-03-04T09:20:53.378Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2023-03-04T09:20:53.378Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2023-03-04T09:20:53.378Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2023-03-04T09:20:53.379Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2023-03-04T09:20:53.380Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2023-03-04T09:20:53.380Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2023-03-04T09:20:53.380Z","updated":"2021-06-13T05:55:39.000Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"https://lhkterence.github.io/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""}],"posts":[{"title":"爬虫代码","slug":"爬虫","date":"2023-05-15T16:00:00.000Z","updated":"2023-05-27T11:34:38.818Z","comments":true,"path":"posts/19d1a4e9.html","link":"","permalink":"https://lhkterence.github.io/posts/19d1a4e9.html","excerpt":"","text":"我的一个爬虫程序目的寻找一些有关的数据。网站是找到了，但是一共1050条数据，因此我选择采用爬虫的技术方法进行数据获取。 网站截图 简易分析首先观察到表格底部，数据是可以不停的切换页面，因此属于数据的动态加载，动态加载的话我就需要分析数据是如何加载的。其实最开始的时候我是直接获取的网页，然后希望采用xpath来获取信息，没想到最后那个网页html压根没有我想要的数据，因此我才意识到属于数据的动态加载，因此这也是一个逐步优化的过程。接下来需要打开开发者工具分析网页数据的加载形式。 网页数据源的寻找 根据上图可以看到数据基本都在XHR或者js中。然后我多更新了几次页面，请求了几次数据，神器的事情发生了，js里面出现了几个相同的东西（红色框框）。数据就在这儿，没错就是它了。 网页链接与参数的确定请求 参数经过分析发现，这个参数中的page就是我需要寻找的变量，它需要循环到1050 定义url与头部信息，有的存在反爬机制首先，爬虫肯定是需要用到requests。其他情况就是可能需要用到正则表达式匹配字符串，需要用到re模块，还需要将数据写入excel,用到pandas，numpy那些。 话不多说，先把链接与头部信息给定义好。 url = \"http://k.tanjiaoyi.com:8080/KDataController/datumlist4Embed.do?\" headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.57' } 有人就会问了，这个链接与头部信息为啥只这样。实际上，可以从开发者工具中看到，如下图。但是为什么那个url这么短呢，实际上是把后面的参数给去除了，没什么关系的。后面配置参数的时候还是会传进去。 参数配置param = { 'jsoncallback': f'jQuery1709194124982724312_16779340403{j}', 'lcnK': '8a57b196d21ac7dfa6299a2937ac861a', 'brand': 'TAN', 'houseid': 'ALL', 'page': f'{i}', 'rows': '20', } 细心的同学可以发现，我这个配置的参数与网站的参数不同，原因是我要进行循环来更新页面，不然的话就只有一个页面的数据。注意循环变量的写法。外面套一个循环既可以了。 获取请求res = requests.get(url=url, headers=headers, params=param) res.encoding = \"utf-8\" data = res.text 获取请求采用requests库。此时如果去打印结果的话，会是一长串 正则表达式进行初步筛选result = re.findall('\\{(.*?)\\}', data) 搜寻想要的数据for k in range(1, len(result)): a = result[k] print(a) match = [\"\"] * 11 value = [\"\"] * 11 match[1] = re.search(r'\"housetext\":\"(.*?)\"', result[k]) match[2] = re.search(r'\"subTypeName\":\"(.*?)\"', result[k]) match[3] = re.search(r'\"indate\":\"(.*?)\"', result[k]) match[4] = re.search(r'\"open\":(\\d+)', result[k]) match[5] = re.search(r'\"high\":(\\d+)', result[k]) match[6] = re.search(r'\"low\":(\\d+)', result[k]) match[7] = re.search(r'\"deal\":(\\d+)', result[k]) match[8] = re.search(r'\"close\":(\\d+)', result[k]) match[9] = re.search(r'\"dealamount\":(\\d+)', result[k]) match[10] = re.search(r'\"dealnum\":(\\d+)', result[k]) 我需要10列，因此，我进行了一一匹配，注意字符串与数字的匹配方式。 匹配到的数据保存为字符串数组for i in range(1, 4): if match[i]: value[i] = match[i].group(1) for j in range(4, 11): if match[j]: value[j] = float(match[j].group(1)) 保存为dataframenew_df = pd.DataFrame([value]) df = pd.concat([df, new_df], ignore_index=True) df变量需要全局定义一下 df = pd.DataFrame() 写入exceldf.to_excel('data.xlsx', index=False)","categories":[{"name":"代码篇","slug":"代码篇","permalink":"https://lhkterence.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AF%87/"}],"tags":[{"name":"python","slug":"python","permalink":"https://lhkterence.github.io/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"https://lhkterence.github.io/tags/%E7%88%AC%E8%99%AB/"},{"name":"编程","slug":"编程","permalink":"https://lhkterence.github.io/tags/%E7%BC%96%E7%A8%8B/"}],"author":"罗宏昆"},{"title":"Smart3D三维立体影像的制作","slug":"Smart3D的三维立体影像的制作","date":"2022-11-20T16:00:00.000Z","updated":"2023-03-13T16:16:01.877Z","comments":true,"path":"posts/15d2a3e9.html","link":"","permalink":"https://lhkterence.github.io/posts/15d2a3e9.html","excerpt":"","text":"Smart3D三维立体模型的制作软件安装包win10安装包 链接：https://pan.baidu.com/s/1gCTBtaGhW1pHrIoNzRCRVA?pwd=xkx9 提取码：xkx9 win11安装包 链接：https://pan.baidu.com/s/15YSHWuSnEe2qTrnOYV1eJQ?pwd=mutk 提取码：mutk 踩过的坑 如果你是win10系统，运行会比较正常，如果是win11，那将会比较麻烦，不过用我给的安装包就比较方便 流程 1.导入相片 2.自由空三 3.刺像控点 4.建模 提交项目，设置合适的格式osgb 输出结果计算实践将近4.5小时","categories":[{"name":"学习篇","slug":"学习篇","permalink":"https://lhkterence.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AF%87/"}],"tags":[{"name":"摄影测量","slug":"摄影测量","permalink":"https://lhkterence.github.io/tags/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F/"},{"name":"课程学习","slug":"课程学习","permalink":"https://lhkterence.github.io/tags/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/"},{"name":"Context capture","slug":"Context-capture","permalink":"https://lhkterence.github.io/tags/Context-capture/"}],"author":"罗宏昆"},{"title":"Anoconda使用总结","slug":"Anoconda的使用","date":"2022-11-17T03:41:03.000Z","updated":"2022-11-17T13:21:50.384Z","comments":true,"path":"posts/19d2z4e8.html","link":"","permalink":"https://lhkterence.github.io/posts/19d2z4e8.html","excerpt":"","text":"Anoconda的使用总结Anoconda查看，进入，删除虚拟环境,创建虚拟环境查看所有虚拟环境： conda info -e 进入虚拟环境： activate 环境名 删除虚拟环境： conda remove -n (虚拟环境名称) --all 创建虚拟环境 conda create -n （环境名称） python=x.x python镜像源清华：https://pypi.tuna.tsinghua.edu.cn/simple 阿里云：http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 华中理工大学：http://pypi.hustunique.com/ 山东理工大学：http://pypi.sdutlinux.org/ 豆瓣：http://pypi.douban.com/simple/ 配置torchhttps://blog.csdn.net/qq_44707910/article/details/118096577 conda创建虚拟环境时出现的问题An unexpected error has occurred. Conda has prepared the above report. 解决方式 conda config --show-sources 如果出现 ==&gt; /home/wangchunxiao/.condarc &lt;== 代表根目录出现.condarc，需要删除 安装pytorch需要增加镜像源conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ 安装torch 在网站https://download.pytorch.org/whl/torch_stable.html下载合适的版本 将下载的文件保存在某个目录下，cmd进入这个目录，执行pip install torch python基础库matplotlib numpy pandas pyecharts datetime 为日期和时间处理同时提供了简单和复杂的方法 zlib 直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile random 提供了生成随机数的工具 math 为浮点运算提供了对底层C函数库的访问 sys 工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量 glob 提供了一个函数用于从目录通配符搜索中生成文件列表 os 提供了不少与操作系统相关联的函数 urllib 获取网页源码 Python常用的第三方库 Scrapy 爬虫工具常用的库 Python爬虫之Scrapy环境搭建 Requests http库 python做接口测试或者爬数据常用 Pillow 是PIL（Python图形库）的一个分支。适用于在图形领域工作的人 Python实现图像处理：PiL依赖库 matplotlib 绘制数据图的库。对于数据科学家或分析师非常有用 OpenCV 图片识别常用的库，通常在练习人脸识别时会用到 pytesseract 图片文字识别，即OCR识别 Python实现OCR识别：pytesseract jira 操作jira，查询Jira信息，操作jira python-jenkins 操作jenkins Python实现jenkins操作和批量部署 python-gitlab 查询gitlab信息 使用gitpython和python-gitlab操作 wxPython Python的一个GUI（图形用户界面）工具 Twisted 对于网络应用开发者最重要的工具 SymPy SymPy可以做代数评测、差异化、扩展、复数等等 SQLAlchemy 数据库的库 SciPy Python的算法和数学工具库 Scapy 数据包探测和分析库 pywin32 提供和windows交互的方法和类的Python库 pyQT Python的GUI工具。给Python脚本开发用户界面时次于wxPython的选择 pyGtk 也是Python GUI库 Pyglet 3D动画和游戏开发引擎 Pygame 开发2D游戏的时候使用会有很好的效果 NumPy 为Python提供了很多高级的数学方法 nose Python的测试框架 nltk 自然语言工具包 IPython Python的提示信息。包括完成信息、历史信息、shell功能，以及其他很多很多方面 BeautifulSoup xml和html的解析库，对于新手非常有用","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://lhkterence.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://lhkterence.github.io/tags/Hexo/"},{"name":"Anoconda","slug":"Anoconda","permalink":"https://lhkterence.github.io/tags/Anoconda/"},{"name":"python","slug":"python","permalink":"https://lhkterence.github.io/tags/python/"}],"author":"罗宏昆"},{"title":"罗宏昆JAVA作业","slug":"JAVA作业","date":"2022-11-15T16:00:00.000Z","updated":"2023-03-13T16:15:49.138Z","comments":true,"path":"posts/19d2a4e9.html","link":"","permalink":"https://lhkterence.github.io/posts/19d2a4e9.html","excerpt":"","text":"罗宏昆JAVA作业所有程序均是自己一个一个敲进去，类名work3_2代表第三章第二题的求解结果，求解环境为IDEA。 第二章1、 用移位运算实现求2的x次方。//导入扫描库 import java.util.Scanner; public class work2_1 { public static void main(String [] args){ Scanner input =new Scanner(System.in); //判断是否有输入数据，如果有输入数据就进行扫描 while(input.hasNext()){ //读取输入的数据，并且赋值给n int n = input.nextInt(); //为什么是n-1呢，因为比方输入1，移位之前原本是10， // 现在变成100，就是2的2次方，并不是按照1次放算的 int num = 2 &lt;&lt; n-1; System.out.println(num); } } } 输出结果 2、 用按位与运算，取模运算、判断一个数是否为奇数。import java.util.Scanner; public class work2_2 { public static void main(String [] args){ //实例化输入对象 Scanner input =new Scanner(System.in); //实例化调用函数的对象 work2_2 a=new work2_2(); //isOddNumber为判断是不是奇数的函数 int int1=input.nextInt(); boolean b=a.isOddNumber(int1); if(b==true){ System.out.println(int1+\"是奇数\"); } else System.out.println(int1+\"是偶数\"); } public Boolean isOddNumber(int integer){ if ((integer&amp;1)==1)//如果和1按照与运算是真，那么就是奇数 { return true; } return false; } } 输出结果 3、 判断一个数是否是2的n 次幂import java.util.Scanner; public class work2_3 { public static void main(String [] args) { //实例化输入对象 Scanner input = new Scanner(System.in); work2_3 a=new work2_3(); //四个测试数据 int int1=input.nextInt(); int int2=input.nextInt(); int int3=input.nextInt(); int int4=input.nextInt(); //分别输出 System.out.println(a.isTwoPower(int1)); System.out.println(a.isTwoPower(int2)); System.out.println(a.isTwoPower(int3)); System.out.println(a.isTwoPower(int4)); } public boolean isTwoPower(int n) { return n &gt; 0 &amp;&amp; (n &amp; (n - 1)) == 0; } } 输出结果 第三章1、 计算多项式1！+2！+3！…+n!，当多项式之和超过10000时停止，并输出累加之和以及n的值。import java.util.Scanner; public class work3_1 { public static void main(String[] args) { Scanner input = new Scanner(System.in); work3_1 a = new work3_1(); //定义全局变量 int sum = 0; int i=1; //进行循环计算 while (sum&lt;=10000) { sum = sum + a.factorial(i); i = i + 1; } //输出计算结果 System.out.println(sum); System.out.println(i-1); } //计算阶乘的函数 public int factorial(int i) { if (i == 1) return i; else return i * factorial(i - 1); } } 输出结果 2、 从标准输入端输入一个字符，判断字符是数字、还是西文字母还是其他的字符。import java.util.Scanner; public class work3_2 { public static void main(String [] args){ Scanner input = new Scanner(System.in); System.out.println(\"请输入字符\"); //charAt函数为返回索引处的字符 char ch = input.next().charAt(0); if (ch &gt;= 65 &amp;&amp; ch &lt;= 90) { System.out.println(ch + \" 是 \" + \"大写字母\"); } else if (ch &gt;= 97 &amp;&amp; ch &lt;= 122) { System.out.println(ch + \" 是 \" + \"小写字母\"); } else if (ch &gt;= '0' &amp;&amp; ch &lt;= '9') { System.out.println(ch + \" 是 \" + \"数字\"); } else { System.out.println(ch + \" 是 \" + \"其他字符\"); } } } 输出结果 3、 利用辗转相除法（欧几里得算法）求两个正整数的最大公约数import java.util.Scanner; public class work3_3 { public static void main(String [] args){ Scanner input =new Scanner(System.in); System.out.println(\"请输入测试数据：\"); //先实例化对象，方便调用函数 work3_3 a=new work3_3(); //读取两个输入的整数 int int1=input.nextInt(); int int2=input.nextInt(); System.out.println(work3_3.solution(int1,int2)+\"为两个整数的最大公约数\"); } //求最大值函数 public static int maxint(int a,int b){ if(a&gt;b) return a; else return b; } //最小值函数 public static int minint(int a,int b){ if(a&lt;b) return a; else return b; } //辗转相除法的函数 public static int solution(int a,int b){ //如果取余数为0，返回除数，也就是不进入循环 //如果余数不是0，进行辗转相除 while (a%b!=0){ int c; c=a%b; a= work3_3.maxint(b,c); b= work3_3.minint(b,c); } return b; } } 输出结果 4、 假设一个数在1000到1100之间，那除以3结果余2,；除以5结果余3,；除以7结果余2（中国剩余定理），求此数。import java.util.Scanner; public class work3_4 { public static void main(String[] args){ Scanner sc=new Scanner(System.in); int i; //直接暴力循环 for(i=1000;i&lt;=1100;i++){ if(i%3==2&amp;&amp;i%5==3&amp;&amp;i%7==2) break; } System.out.println(i); } } 输出结果 5、 小球从100米高度自由落下，每次触地后反弹到原来高度的一半，求第10次触地时经历的总路程以及第10次反弹高度。import java.util.Scanner; public class work3_5 { public static void main(String[] args){ //i代表反弹i次 //height代表第i次反弹之后的高度 //sum_h代表累计路程 float height; int i; float sum_h=0; //求第10次的结果所以i&lt;10,100次就是i&lt;100 for(i=0,height=100;i&lt;10;i++) { sum_h=sum_h+height; height=height/2; } System.out.println(sum_h); System.out.println(height); } } 输出结果","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://lhkterence.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://lhkterence.github.io/tags/Hexo/"},{"name":"JAVA,简单算法","slug":"JAVA-简单算法","permalink":"https://lhkterence.github.io/tags/JAVA-%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95/"},{"name":"博客","slug":"博客","permalink":"https://lhkterence.github.io/tags/%E5%8D%9A%E5%AE%A2/"}],"author":"罗宏昆"},{"title":"罗宏昆大数据可视化作业","slug":"大数据可视化","date":"2022-11-14T16:00:00.000Z","updated":"2022-11-19T14:37:17.195Z","comments":true,"path":"posts/19d2a4e3.html","link":"","permalink":"https://lhkterence.github.io/posts/19d2a4e3.html","excerpt":"","text":"罗宏昆大数据科学可视化的作业前端Web可视化代码部分from pyecharts import options as opts from pyecharts.charts import Pie from pyecharts.faker import Faker c = ( Pie() .add( \"\", [list(z) for z in zip(Faker.choose(), Faker.values())], radius=[\"40%\", \"55%\"], label_opts=opts.LabelOpts( position=\"outside\", formatter=\"{a|{a}}{abg|}\\n{hr|}\\n {b|{b}: }{c} {per|{d}%} \", background_color=\"#eee\", border_color=\"#aaa\", border_width=1, border_radius=4, rich={ \"a\": {\"color\": \"#999\", \"lineHeight\": 22, \"align\": \"center\"}, \"abg\": { \"backgroundColor\": \"#e3e3e3\", \"width\": \"100%\", \"align\": \"right\", \"height\": 22, \"borderRadius\": [4, 4, 0, 0], }, \"hr\": { \"borderColor\": \"#aaa\", \"width\": \"100%\", \"borderWidth\": 0.5, \"height\": 0, }, \"b\": {\"fontSize\": 16, \"lineHeight\": 33}, \"per\": { \"color\": \"#eee\", \"backgroundColor\": \"#334455\", \"padding\": [2, 4], \"borderRadius\": 2, }, }, ), ) .set_global_opts(title_opts=opts.TitleOpts(title=\"Pie-富文本示例\")) .render(\"pie_rich_label.html\") ) from pyecharts import options as opts from pyecharts.charts import Geo from pyecharts.globals import ChartType, SymbolType c = ( Geo() .add_schema( maptype=\"china\", itemstyle_opts=opts.ItemStyleOpts(color=\"#ddb6b6\", border_color=\"#111\"), ) .add( \"\", [(\"广州\", 55), (\"北京\", 66), (\"杭州\", 77), (\"重庆\", 88)], type_=ChartType.EFFECT_SCATTER, color=\"white\", ) .add( \"geo\", [(\"广州\", \"上海\"), (\"广州\", \"北京\"), (\"广州\", \"杭州\"), (\"广州\", \"重庆\")], type_=ChartType.LINES, effect_opts=opts.EffectOpts( symbol=SymbolType.ARROW, symbol_size=6, color=\"blue\" ), linestyle_opts=opts.LineStyleOpts(curve=0.2), ) .set_series_opts(label_opts=opts.LabelOpts(is_show=False)) .set_global_opts(title_opts=opts.TitleOpts(title=\"Geo-Lines-background\")) .render(\"geo_lines_background.html\") ) 最后的可视化效果 科学可视化对于飞机的三维点云进行可视化展示from mpl_toolkits.mplot3d import Axes3D import matplotlib.pyplot as plt import numpy as np import pandas as pd df=df=pd.read_excel('D:\\OneDrive - cumt.edu.cn\\桌面\\数据集\\飞机点云数据集.xlsx') arr=df.values fig = plt.figure() bxs = arr[:,0] bys = arr[:,1] bzs = arr[:,2] bx = fig.add_subplot(111, projection='3d') bx.scatter(bxs, bys, bzs, c=c, marker=m) bx.set_xlabel('X Label') bx.set_ylabel('Y Label') bx.set_zlabel('Z Label') # 点在 3 个坐标平面上的投影 bx.scatter(0, bys, bzs, zdir='z', c='green', s=bzs*28 ) # 投影在 yz 平面 bx.scatter(bxs, 0, bzs, zdir='z', c='gray', s=bzs*28 ) # 投影在 xz 平面 bx.scatter(bxs, bys, 0, zdir='z', c='cyan', s=bzs*28 ) # 投影在 xy 平面 # 调整视角 bx.view_init(elev=120, # 仰角 azim=45 # 方位角 ) plt.show() 基于pyechart的三维地图可视化各个省份奶制品的消费量from pyecharts import options as opts from pyecharts.charts import Map3D from pyecharts.globals import ChartType from pyecharts.commons.utils import JsCode example_data = [ (\"黑龙江\", [127.9688, 45.368, 10.6]), (\"内蒙古\", [110.3467, 41.4899, 24.8]), (\"吉林\", [125.8154, 44.2584, 11.6]), (\"辽宁\", [123.1238, 42.1216, 17.7]), (\"河北\", [114.4995, 38.1006, 16.5]), (\"天津\", [117.4219, 39.4189, 16.8]), (\"山西\", [112.3352, 37.9413, 17.9]), (\"陕西\", [109.1162, 34.2004, 14.7]), (\"甘肃\", [103.5901, 36.3043, 15.7]), (\"宁夏\", [106.3586, 38.1775, 13.5]), (\"青海\", [101.4038, 36.8207, 16.7]), (\"新疆\", [87.9236, 43.5883, 18.7]), (\"西藏\", [91.11, 29.97, 8.5]), (\"四川\", [103.9526, 30.7617, 10]), (\"重庆\", [108.384366, 30.439702, 14]), (\"山东\", [117.1582, 36.8701, 17.6]), (\"河南\", [113.4668, 34.6234, 13.5]), (\"江苏\", [118.8062, 31.9208, 15.4]), (\"安徽\", [117.29, 32.0581, 11.3]), (\"湖北\", [114.3896, 30.6628, 7.7]), (\"浙江\", [119.5313, 29.8773, 14.7]), (\"福建\", [119.4543, 25.9222, 11.7]), (\"江西\", [116.0046, 28.6633, 11.2]), (\"湖南\", [113.0823, 28.2568, 7.4]), (\"贵州\", [106.6992, 26.7682, 5.1]), (\"广西\", [108.479, 23.1152, 5.6]), (\"海南\", [110.3893, 19.8516, 4.9]), (\"上海\", [121.4648, 31.2891, 23.1]), ] c = ( Map3D() .add_schema( itemstyle_opts=opts.ItemStyleOpts( color=\"rgb(5,101,123)\", opacity=1, border_width=0.8, border_color=\"rgb(62,215,213)\", ), map3d_label=opts.Map3DLabelOpts( is_show=False, formatter=JsCode(\"function(data){return data.name + \" \" + data.value[2];}\"), ), emphasis_label_opts=opts.LabelOpts( is_show=False, color=\"#fff\", font_size=10, background_color=\"rgba(0,23,11,0)\", ), light_opts=opts.Map3DLightOpts( main_color=\"#fff\", main_intensity=1.2, main_shadow_quality=\"high\", is_main_shadow=False, main_beta=10, ambient_intensity=0.3, ), ) .add( series_name=\"bar3D\", data_pair=example_data, type_=ChartType.BAR3D, bar_size=1, shading=\"lambert\", label_opts=opts.LabelOpts( is_show=False, formatter=JsCode(\"function(data){return data.name + ' ' + data.value[2];}\"), ), ) .set_global_opts(title_opts=opts.TitleOpts(title=\"Map3D-Bar3D\")) .render(\"map3d_with_bar3d.html\") ) 运行代码会生成map3d_with_bar3d.html文件，用浏览器打开即可 部分211大学12月百度指数动态图数据集数据集是我花5块钱买的211大学的百度指数 默认效果import pandas as pd import bar_chart_race as bcr import matplotlib matplotlib.rcParams['font.sans-serif'] = ['SimHei'] # 显示中文 # 为了坐标轴负号正常显示。matplotlib默认不支持中文，设置中文字体后，负号会显示异常。需要手动将坐标轴负号设为False才能正常显示负号。 matplotlib.rcParams['axes.unicode_minus'] = False df = pd.read_csv('D:\\OneDrive - cumt.edu.cn\\桌面\\大数据可视化\\data.csv', index_col=[\"time\"]) # 生成 GIF 图像 bcr.bar_chart_race(df, \"211_schools_rank.gif\", ) 代码1import pandas as pd import bar_chart_race as bcr import matplotlib matplotlib.rcParams['font.sans-serif'] = ['SimHei'] # 显示中文 # 为了坐标轴负号正常显示。matplotlib默认不支持中文，设置中文字体后，负号会显示异常。需要手动将坐标轴负号设为False才能正常显示负号。 matplotlib.rcParams['axes.unicode_minus'] = False df = pd.read_csv('D:\\OneDrive - cumt.edu.cn\\桌面\\大数据可视化\\data.csv', index_col=[\"time\"]) # 生成 GIF 图像 bcr.bar_chart_race(df, \"211_schools_rank.gif\", fixed_max=True, steps_per_period=30, period_length=100, title='部分大学2021年12月百度指数动态变化图', bar_kwargs={'alpha': .2, 'ec': 'black', 'lw': 3} ) 结果1 代码2（python）import pandas as pd from pyecharts import options as opts from pyecharts.charts import Bar, Timeline import random # 读取数据 df = pd.read_csv(r\"D:\\code\\python code\\动态水平柱状图参考案例-疫情分析\\data_1.csv\") # 建立时间轴 l = df[\"time\"].size date = [] errordate = [\"2020-07-10\", \"2020-01-23\", \"2020-07-28\"] # 去除异常数据 for i in range(l - 1, -1, -1): if df[\"time\"][i] not in date and df[\"time\"][i] not in errordate: date.append(df[\"time\"][i]) # 建立时间轴 color_dir = {} # 存储颜色字典 color = [ # 颜色库 \"#c1232b\", \"#27727b\", \"#fcce10\", \"#e87c25\", \"#b5c334\", \"#fe8463\", \"#9bca63\", \"#fad860\", \"#f3a43b\", \"#60c0dd\", \"#d7504b\", \"#c6e579\", \"#f4e001\", \"#f0805a\", \"#26c0c0\" ] tl = Timeline() # 建立时间序列图 f = 0 for i in date: if i == \"2020-03-15\": f = 1 # 排序 df_sub = df[df[\"time\"] == i].sort_values(by=\"value\", ascending=False) df_sub = df_sub[df_sub[\"value\"] != 0] df_new = df_sub[0:1] # 选择前10的国家喝数量 school = [df_new.iat[0, 1]] counts = [float(df_new.iat[0, 2])] l = df_sub[\"time\"].size # 提取第i天的数据 for j in range(l): if df_sub.iat[j, 1] not in school: if df_sub.iat[j, 0] == \"中国\" and f: if df_sub.iat[j, 1] != \"中国\": continue school.append(df_sub.iat[j, 1]) counts.append(float(df_sub.iat[j, 2])) if school[-1] not in color_dir.keys(): color_dir[school[-1]] = random.choice(color) if len(school) &gt;= 12: break school = school[::-1] counts = counts[::-1] # 填充颜色 y = [] for j in range(len(school)): if j == len(school) - 1: y.append( opts.BarItem( name=school[j], value=counts[j], itemstyle_opts=opts.ItemStyleOpts(color=\"#c1232b\"), ) ) else: y.append( opts.BarItem( name=school[j], value=counts[j], itemstyle_opts=opts.ItemStyleOpts(color=color_dir[school[j]]), ) ) bar = ( Bar(init_opts=opts.InitOpts(bg_color='rgb(133, 133, 173)', width='1000px', height='600px', page_title='page', )) .add_xaxis(school) .add_yaxis(\"\", y, label_opts=opts.LabelOpts(position=\"top\", font_weight=\"bold\", ), category_gap=20, markpoint_opts=opts.MarkPointOpts( data=[ opts.MarkPointItem(name=\"\", value=school[11], coord=[counts[11], school[11]], itemstyle_opts=opts.ItemStyleOpts(color=\"#c1232b\", border_color='#f2d643')), opts.MarkPointItem(name=\"\", value=school[10], coord=[counts[10], school[10]], itemstyle_opts=opts.ItemStyleOpts(color=color_dir[school[10]], border_color='grey')), opts.MarkPointItem(name=\"\", value=school[9], coord=[counts[9], school[9]], itemstyle_opts=opts.ItemStyleOpts(color=color_dir[school[9]], border_color='#000000')), ] )) .reversal_axis() .set_global_opts( title_opts=opts.TitleOpts(\"211大学百度指数排名(时间: {} )\".format(i), pos_right=350, padding=[30, 20]), xaxis_opts=opts.AxisOpts(max_=int(max(counts) * 1.05)) ) ) tl.add(bar, \"{}\".format(i)) tl.add_schema( play_interval=400, is_loop_play=True, axis_type=\"category\", orient=\"horizontal\", # 是否自动播放 is_auto_play=True, # 控制时间轴的宽高 width=500, ) # 播放间隔，是否循环播放 tl.render(\"aaa.html\") 代码2（html） /*主要样式设置*/ &lt;style&gt; #mp3 { width: 30px; height: 30px; position: absolute; left: 200px; bottom: 350px; } #mp4 { width: 30px; height: 30px; position: absolute; left: 1000px; top: 10px; } #text { font-size: 50px; color: rgb(243, 223, 46); position: absolute; left: 30px; bottom: 200px; border-width: 10px; border-style: groove; border-color: rgb(8, 232, 240); } #author { font-size: 50px; color: rgb(243, 223, 46); position: absolute; left: 1250px; bottom: 50px; border-width: 10px; border-style: groove; border-color: rgb(8, 232, 240); font-family: LiSu; } &lt;/style&gt; &lt;body&gt; &lt;div id=\"Layer1\" style=\"position:fixed; left:0px; top:0px; width:100%; height:100%;opacity:0.8\"&gt; &lt;img src=\"pic1.jpg\" width=\"100%\" height=\"100%\"/&gt; &lt;/div&gt; &lt;div id=\"30754297562d43ae9633a3caa723e521\" class=\"chart-container\" style=\"width:900px; height:500px;\"&gt; &lt;/div&gt; &lt;div id=\"mp3\"&gt; &lt;audio controls=\"controls\" loop=\"loop\" autoplay=\"autoplay\"&gt; &lt;source src=\"voice.mp3\" type=\"audio/mp3\"&gt;&lt;/source&gt; &lt;/audio&gt; &lt;/div&gt; &lt;div id=\"mp4\"&gt; &lt;video controls=\"controls\" loop=\"loop\"&gt; &lt;source src=\"video.mp4\" type=\"video/mp4\"&gt;&lt;/source&gt; &lt;/video&gt; &lt;/div&gt; &lt;div id=\"text\"&gt; 2021年12月部分211大学百度指数排名 &lt;/div&gt; &lt;div id=\"author\"&gt; 作者:测绘工程20-1班罗宏昆 &lt;/div&gt; 结果2","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://lhkterence.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://lhkterence.github.io/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"https://lhkterence.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"python,前端","slug":"python-前端","permalink":"https://lhkterence.github.io/tags/python-%E5%89%8D%E7%AB%AF/"}],"author":"罗宏昆"},{"title":"罗宏昆个人简介","slug":"introduce","date":"2022-11-01T03:41:03.000Z","updated":"2022-11-20T11:00:57.120Z","comments":true,"path":"posts/e3e08109.html","link":"","permalink":"https://lhkterence.github.io/posts/e3e08109.html","excerpt":"","text":"简介姓名罗宏昆 性别男 出生日期2002.7.15 兴趣爱好唱歌，打乒乓球，下象棋 个人评价一个正在努力学习的菜鸡 个人技能C++ (菜鸡水平) matlab（数学建模常用，所以学了） python（里面的包比较有意思，目前涉足深度学习领域，正在学习torch） java(正在上的一门课程) html,css,js（前端开发，会一些基本的东西，还有半桶水的Vue，其实js也不咋地） CAD,CASS（数字地形测量实习以及计算机地图制图课程有用到） ArcGIS（地图学，地理信息系统原理课程实验和实习用到） ENVI（环境遥感，遥感原理与应用,ENVI遥感软件） latex（应该可以搜搜改改用latex写一篇论文，工程测量学的作业用latex写的） polSARpro（环境遥感课程用到，对SAR数据进行处理） Smart3D（测绘劳动实践课用这个做三维立体模型） 所获奖项国家级：全国大学生程序设计编程挑战赛铜奖 省级：全国大学生外包服务大三等奖，全国大学生能源经济学术创意大赛二等奖，五一数学建模联赛二等奖，江苏省高等数学竞赛三等奖，江苏省财务大数据比赛三等奖，全国大学电工杯数学建模三等奖（先写这这么多。有些比赛级别不好说） 校级：中国矿业大学高等数学竞赛二等奖，中国矿业大学概率论竞赛三等奖，中国矿业大学博学杯数学建模三等奖，中国矿业大学matlab镜湖美化大赛二等奖（还有一些文艺比赛就不列举了）","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://lhkterence.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://lhkterence.github.io/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"https://lhkterence.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Github","slug":"Github","permalink":"https://lhkterence.github.io/tags/Github/"}],"author":"罗宏昆"},{"title":"测量平差总结","slug":"测量平差","date":"2022-02-26T16:00:00.000Z","updated":"2022-11-16T04:15:52.442Z","comments":true,"path":"posts/19d2a4e6.html","link":"","permalink":"https://lhkterence.github.io/posts/19d2a4e6.html","excerpt":"","text":"前言总体感觉测量平差这门课还是不是很容易，需要比较深刻的理解概念还要会相关的推导，比如精密度精确度准确度粗值观测值平差值等。 主体内容就是间接平差，条件平差。在这两者基础之上，间接平差参数选择比较多，就出现附有限制条件的间接平差。如果条件平差又有参数，就称作附有参数的条件平差 。然后是误差椭圆，分析误差分布规律的，哪里误差大，哪里误差小。最后为了评定平差结果或者精度的好坏，又有一部分参数检验和假设检验的内容，不过基本都是概率论的内容，比如U检验，T检验等，所以还是需要熟悉一些参数的构造。 第一章观测误差的分类及其处理给出误差分类的表达式，粗差、系统误差和偶然误差的定义。 系统误差：在相同的观测条件下作一系列的观测，如果误差在大小、符号上表现出系统性，或者在观测过程中按一定的规律变化，或者为某一常数，那么，这种误差称为系统误差。简言之，符合函数规律的误差称为系统误差。 偶然误差：在相同的观测条件下作一系列的观测，如果误差在大小和符号上都表现出偶然性，即从单个误差看，该列误差的大小和符号没有规律性，但就大量误差的总体而言，具有一定的统计规律，这种误差称为偶然误差。简言之，符合统计规律的误差称为偶然误差。 误差来源：来源于测量仪器，观测者，外界条件 精度，准确度，精确度 误差传播定律和协因数传播定律这部分其实很简单，就是将需要计算方差的量与已知协因数阵的量建立联系，然后根据公式求 D_{ZY}=KD_{XX}F^T这个公式如果看不懂就没救了，赶紧复习吧。 定权水准 \\sigma _{h_{AB}}=\\sqrt{n}\\sigma _0\\left( \\sigma _0\\text{为每一站的中误差} \\right) \\text{注意：地势平坦时}\\sqrt{n}\\text{换成}\\sqrt{S}同精度观测值的算数平均数的精度？？自己想想 常见的数学模型 间接平差：将观测值的改正数用参数表示出来；方程总数：n；参数个数u=t;自由度f=r=n-t; 条件平差: 根据已知图形的客观条件进行列些方程式；方程总数：r；参数个数u=0;自由度f=r=n-t; 具有参数的条件平差: 以条件方程为主，结合相应选择的参数1进行列写方程；方程总数：r+u；参数个数u&lt;t;自由度f=r=n-t; 附有条件的参数平差:以选择的参数为主，客观条件为辅进行列些方程；方程总数：n+s；参数个数u&gt;t;自由度f=r=n-t;s=u-t; 最小二乘原理代数角度 V^TPV=\\min(其中，V为观测值的改正数向量）； 概率角度：结合正态分布的最大似然估计进行求解 条件平差原理由于观测值个数多于必要观测数，产生了多余观测，因此会有额外的条件进行列立方程式。方程式个数即为多余观测数，r=n-t。 条件方程列立水准网有已知水准点的水准网中，必要观测数为未知点数；在没有已知水准点的水准网中，必要观测数为全部网点数减1。 测角网基本条件：图形条件，圆周条件，极条件（固定角条件，固定边条件）； 图形条件：内角和的条件，如三角形内角和为180°等。 圆周条件：又称水平条件，即围绕一中心点的各角之和为360°。 极条件：从一已知边出发，经过不同路径到达另一已知边，理论上结果应该相同。 测边网应用场景有大地四边形，中点多边形等； 具体方法：角度闭合法，即由测得的边长结合三角形的正余弦条件，推算出角度与边长的关系，进而求得角度改正数与边长改正数的联系，得到角度改正数方程： V_a=\\rho ^{''}\\left( V_{S_a}-\\cos CV_{S_b}-\\cos BV_{S_c} \\right) /h_a导线网对于单一附和导线，要测定一个未知点坐标，必须要测得一条导线边和一个水平角，则若有n-1个未知点，必要观测数t=2（n-1)；总观测值数为n条边长和n+1个水平角共2n+1个，则多余观测恒为3个，故单一附和导线中只有3个条件方程。 精度评定闭合差的协因数阵？联系向量的协因数阵，改正数的协因数阵，观测值的平差值的谐因数阵，都记得吗？ 间接平差原理点击确定n，t，u。根据集合关系，列出 V=B\\hat{x}-L勇最小二乘原理求解 V^TPV=\\min间接平差的重要公式 B^TPV=0 N_{BB}\\hat{x}=W \\hat{x}=\\left( B^TPB \\right) ^{-1}B^TPL这些公式记得吗？ 间接平差重点知识1：间接平差的计算步骤 2：测方向的三角网模型 3：测角网的函数模型（尤其是反正切的线性化） 4：测边网的函数模型（根号的正向化） 附有参数的条件平差模型 AV+Bx-W=0 D=\\sigma _{0}^{2}Q=\\sigma _{0}^{2}P^{-1}法方程 N_{aa}K+B\\hat{x}-W=0 B^TK=0解 K=N_{aa}^{-1}\\left( W-B\\hat{x} \\right) \\hat{x}=N_{bb}^{-1}B^TN_{aa}^{-1}W附有限制条件的间接平差函数模型 V=B\\hat{x}-L C\\hat{x}+W_x=0法方程 N_{bb}\\hat{x}+C^TK_s-W=0 C\\hat{x}-W_x=0联系向量 K_s=N_{cc}^{-1}\\left( CN_{bb}^{-1}W+W_x \\right) N_{cc}=CN_{bb}^{-1}C^T误差椭圆误差椭圆的三个参数：长半轴，短半轴，长半轴或者短半轴的方向 点位误差曲线：以极大值方向与极小值方向的交点为极点，极大值方向为极轴，以坐标北为起算的角为极角变量，相应方向的中误差为极径变量。最后形成一个封闭曲线 点位方差计算公式 \\sigma _P^2=\\sigma _{X}^{2}+\\sigma _{Y}^{2}任意方向的位差公式 \\sigma _{\\varphi}^{2}=\\sigma _{0}^{2}\\left( Q_{xx}\\cos ^2\\varphi +Q_{yy}\\sin ^2\\varphi +Q_{xy}\\sin 2\\varphi \\right)极大值E，极小值F的判断方法 \\tan 2\\varphi _0=\\frac{2Q_{xy}}{Q_{xx}-Q_{xy}}\\text{，}\\left( \\varphi _0\\text{为极值方向} \\right)重要的计算公式 K=\\sqrt{\\left( Q_{xx}-Q_{xy} \\right) ^2+4Q_{xy}^2} E^2=\\frac{1}{2}\\sigma _0^2\\left[ \\left( Q_{xx}+Q_{yy} \\right) +K \\right] F^2=\\frac{1}{2}\\sigma _0^2\\left[ \\left( Q_{xx}+Q_{yy} \\right) -K \\right] \\sigma _{p}^{2}=E^2+F^2","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://lhkterence.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://lhkterence.github.io/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"https://lhkterence.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"测量平差","slug":"测量平差","permalink":"https://lhkterence.github.io/tags/%E6%B5%8B%E9%87%8F%E5%B9%B3%E5%B7%AE/"}],"author":"罗宏昆"}],"categories":[{"name":"代码篇","slug":"代码篇","permalink":"https://lhkterence.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AF%87/"},{"name":"学习篇","slug":"学习篇","permalink":"https://lhkterence.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AF%87/"},{"name":"博客篇","slug":"博客篇","permalink":"https://lhkterence.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"python","slug":"python","permalink":"https://lhkterence.github.io/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"https://lhkterence.github.io/tags/%E7%88%AC%E8%99%AB/"},{"name":"编程","slug":"编程","permalink":"https://lhkterence.github.io/tags/%E7%BC%96%E7%A8%8B/"},{"name":"摄影测量","slug":"摄影测量","permalink":"https://lhkterence.github.io/tags/%E6%91%84%E5%BD%B1%E6%B5%8B%E9%87%8F/"},{"name":"课程学习","slug":"课程学习","permalink":"https://lhkterence.github.io/tags/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/"},{"name":"Context capture","slug":"Context-capture","permalink":"https://lhkterence.github.io/tags/Context-capture/"},{"name":"Hexo","slug":"Hexo","permalink":"https://lhkterence.github.io/tags/Hexo/"},{"name":"Anoconda","slug":"Anoconda","permalink":"https://lhkterence.github.io/tags/Anoconda/"},{"name":"JAVA,简单算法","slug":"JAVA-简单算法","permalink":"https://lhkterence.github.io/tags/JAVA-%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95/"},{"name":"博客","slug":"博客","permalink":"https://lhkterence.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"python,前端","slug":"python-前端","permalink":"https://lhkterence.github.io/tags/python-%E5%89%8D%E7%AB%AF/"},{"name":"Github","slug":"Github","permalink":"https://lhkterence.github.io/tags/Github/"},{"name":"测量平差","slug":"测量平差","permalink":"https://lhkterence.github.io/tags/%E6%B5%8B%E9%87%8F%E5%B9%B3%E5%B7%AE/"}]}